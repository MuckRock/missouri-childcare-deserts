# Signature dates are also broken
crrsa_tech_asistance <-  read_excel(here("data", "raw", "CRRSA Technical Business Assistance with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
mutate(facility_zip = case_when(facility_provider_dvn_1 == "002590736" ~ "64152",
facility_provider_dvn_1 == "002746443" ~ "63138",
facility_provider_dvn_1 == "000180969" ~ "63136",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_tech_asistance") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn_1) %>%
select(id, facility_zip, amount, type, signature_date, date_created, date) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
# Manually fixing years by checking against application date
mutate(year = case_when(id == "000181879" ~ as.integer(2022),
id == "002176318" ~ as.integer(2022),
id == "002444331" ~ as.integer(2022),
id == "002490442" ~ as.integer(2021),
id == "001994552" ~ as.integer(2021),
id == "002637294" ~ as.integer(2021),
id == "002244324" ~ as.integer(2021),
id == "002875465" ~ as.integer(2021),
id == "002810659" ~ as.integer(2021),
id == "002416246" ~ as.integer(2022),
id == "002921977" ~ as.integer(2022), TRUE ~ year)) %>%
rename(zip = facility_zip)
View(crrsa_tech_asistance)
# 920 observations, 813 are paid
# Signature dates are also broken
crrsa_tech_asistance <-  read_excel(here("data", "raw", "CRRSA Technical Business Assistance with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
mutate(facility_zip = case_when(facility_provider_dvn_1 == "002590736" ~ "64152",
facility_provider_dvn_1 == "002746443" ~ "63138",
facility_provider_dvn_1 == "000180969" ~ "63136",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_tech_asistance") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn_1) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
# Manually fixing years by checking against application date
mutate(year = case_when(id == "000181879" ~ as.integer(2022),
id == "002176318" ~ as.integer(2022),
id == "002444331" ~ as.integer(2022),
id == "002490442" ~ as.integer(2021),
id == "001994552" ~ as.integer(2021),
id == "002637294" ~ as.integer(2021),
id == "002244324" ~ as.integer(2021),
id == "002875465" ~ as.integer(2021),
id == "002810659" ~ as.integer(2021),
id == "002416246" ~ as.integer(2022),
id == "002921977" ~ as.integer(2022), TRUE ~ year)) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
View(crrsa_tech_asistance)
all_relief <- rbind(arpa_paycheck_3, arpa_training, arpa_retention, crrsa_paycheck_1, crrsa_paycheck_2, crrsa_startup_expansion,
crrsa_tech_asistance)
View(all_relief)
csv.write(all_relief, "data/processed/all_relief_cleaned.csv")
write.csv(all_relief, "data/processed/all_relief_cleaned.csv")
gewd()
getwd()
setwd("C:/Users/newsd/home/code/missouri-childcare-deserts")
write.csv(all_relief, "data/processed/all_relief_cleaned.csv")
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(lubridate)
# 1231 observations
# No status so all must be paid
crrsa_paycheck_2 <-  read_excel(here("data", "raw", "CRRSA Paycheck Protection Round 2 with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Four zip codes are missing and I hardcoded by request number
request_number == "E817-412" ~ "63760",
request_number == "E564-851" ~ "65625",
request_number == "E245-402" ~ "65051",
request_number == "E573-202" ~ "64465",
# Two zip codes were incorrect
request_number == "P304-368" ~ "63857",
request_number == "E789-621" ~ "63021",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "crrsa_paycheck_2") %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
rename(amount = paid_amount) %>%
select(id, zip, amount, type, year)
source("C:/Users/newsd/home/code/missouri-childcare-deserts/etl/4_clean-relief-data.R", echo=TRUE)
library(tidyverse)
library(janitor)
library(readxl)
library(tidycensus)
library(here)
library(sf)
library(lubridate)
library(tmap)
# The code below caches the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
# Load all relief data with cleaned zips and years for when and where money was dispersed to
relief_funding <- read_csv(here("data", "processed", "all_relief_cleaned.csv")) %>%
mutate(zip = as.character(zip))
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Join crosswalk with relief funding zips to that each zip matches a zcta to correspond to desert data
relief_zcta <- relief_funding %>%
anti_join(zip_zcta_crosswalk, by = c("zip" = "zip_code"))
# Load all relief data with cleaned zips and years for when and where money was dispersed to
relief_funding <- read_csv(here("data", "processed", "all_relief_cleaned.csv")) %>%
mutate(zip = as.character(zip))
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Join crosswalk with relief funding zips to that each zip matches a zcta to correspond to desert data
relief_zcta <- relief_funding %>%
anti_join(zip_zcta_crosswalk, by = c("zip" = "zip_code"))
View(relief_funding)
View(relief_funding)
View(zip_zcta_crosswalk)
# Join crosswalk with relief funding zips to that each zip matches a zcta to correspond to desert data
relief_zcta <- relief_funding %>%
inner_join(zip_zcta_crosswalk, by = c("zip" = "zip_code"))
View(relief_zcta)
View(relief_zcta)
# Load cleaned and crosswalked data
capacity_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
select(zcta, year, month, licensed_capacity, pop_5_and_under)
View(capacity_data)
# Load cleaned and crosswalked data
capacity_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
select(zcta, year, month, licensed_capacity, pop_5_and_under) %>%
filter(year %in% c("2021", "2022"))
# Load cleaned and crosswalked data
capacity_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
select(zcta, year, month, licensed_capacity, pop_5_and_under) %>%
filter(year %in% c("2021", "2022")) %>%
group_by(zcta) %>%
summarize(ratio = sum(pop_5_and_under) / sum(licensed_capacity)) %>%
filter(ratio >= 3) %>%
# Load cleaned and crosswalked data
capacity_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
select(zcta, year, month, licensed_capacity, pop_5_and_under) %>%
filter(year %in% c("2021", "2022")) %>%
group_by(zcta) %>%
summarize(ratio = sum(pop_5_and_under) / sum(licensed_capacity)) %>%
filter(ratio >= 3)
# Load cleaned and crosswalked data
capacity_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv"))
# Filter the capacity deserts to data from 2021 and 2022, aggregate the bi-yearly data to yearly, and remove non-desert zctas
zcta_deserts <- capacity_data %>%
select(zcta, year, month, licensed_capacity, pop_5_and_under) %>%
filter(year %in% c("2021", "2022")) %>%
group_by(zcta) %>%
summarize(ratio = sum(pop_5_and_under) / sum(licensed_capacity)) %>%
filter(ratio >= 3)
View(zcta_deserts)
library(tidyverse)
library(janitor)
library(readxl)
library(tidycensus)
library(here)
library(sf)
library(lubridate)
library(tmap)
# Load clean and crosswalked data for all zctas from ChildCareAware survey
survey_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
mutate(zcta = as.character(zcta))
# Load all zctas not included in ChildCareAware survey
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
filter(year == "2023") %>%
select(zcta, status)
### JOIN CROSSWAKLED DATA WITH GEOM FOR MAPPING ###
# Now we can use zctas to get geoms for mapping
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE) %>%
select(GEOID, geometry)
# Uh oh, we lost 5 zctas in this join
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
View(map_df)
View(map_df_sf)
View(map_df)
#| output: true
tm_shape(map_df_sf) +
tm_polygons(status)
View(map_df_sf)
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
View(survey_data)
n_distinct(survey_data$zcta)
View(survey_data)
# Load clean and crosswalked data for all zctas from ChildCareAware survey
# There are 526 zctas
survey_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
mutate(zcta = as.character(zcta)) %>%
filter(year == 2023)
n_distinct(survey_data$zcta)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta")
View(map_df)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
select(zcta, status)
View(map_df)
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE) %>%
select(GEOID, geometry)
# The code below caches the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
#
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
# This join to zcta geoms from ACS data drops 5 values
map_df_sf <- map_df %>%
anti_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
# This join to zcta geoms from ACS data drops 5 values
map_df_sf <- map_df %>%
anti_join(zcta_geoms, by = c("zcta" = "GEOID"))
View(map_df_sf)
View(mo_zctas)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
View(mo_zctas)
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
# Sets tmap to interactive mode
tmap_mode("view")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
View(map_df)
View(survey_data)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test"))
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
select(zcta, status, po_name, ratio)
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
select(zcta, status, po_name, ratio)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta, po_name)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test"))
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta,  po_name)
View(zcta_geoms)
View(mo_zctas)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1)
View(mo_zctas)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta,  po_name)
View(mo_zctas)
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE)
View(zcta_geoms)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta, po_name) %>%
slice(1L)
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status")
tmaptools::palette_explorer()
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status"
palette("white", "orange", "red"))
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status"
palette("white", "orange", "red"))
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status",
palette("white", "orange", "red"))
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status",
palette = YlOrRd)
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status",
palette = RdBu)
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status",
palette = "Reds")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status",
palette = "-Reds")
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ "test")) %>%
select(zcta, status, status_num, po_name, ratio)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ 0))
View(map_df)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ 0)) %>%
select(zcta, status, status_num, po_name, ratio)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ 0)) %>%
select(zcta, status, status_num, ratio)
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status_num",
palette = "Reds")
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status_num",
palette = "Reds",
legend.show = FALSE)
# Load clean and crosswalked data for all zctas from ChildCareAware survey
# There are 475 unique zctas for 2023 in the data
survey_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
mutate(zcta = as.character(zcta)) %>%
filter(year == 2023)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ 0)) %>%
select(zcta, status, status_num, ratio)
### JOIN CROSSWAKLED DATA WITH GEOM FOR MAPPING ###
# Now we can use zctas to get geoms for mapping
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE)
select(GEOID, geometry)
# LOAD DATA
# Load clean and crosswalked data for all zctas from ChildCareAware survey
# There are 475 unique zctas for 2023 in the data
survey_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
mutate(zcta = as.character(zcta)) %>%
filter(year == 2023)
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to thise crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO") %>%
distinct(zcta)
# Add back in all zctas not included in survey so that we can map them all together
map_df <-  survey_data %>%
right_join(mo_zctas, by = "zcta") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", ratio < 3 ~ "non-desert", ratio >= 3 & ratio < 10 ~ "desert", ratio >= 10 ~ "extreme", TRUE ~ "test")) %>%
mutate(status_num = case_when(is.na(ratio) ~ 0, ratio < 3 ~ 0, ratio >= 3 & ratio < 10 ~ 1, ratio >= 10 ~ 2, TRUE ~ 0)) %>%
select(zcta, status, status_num, ratio)
# JOIN CROSSWAKLED DATA WITH GEOM FOR MAPPING
# Now we can use zctas to get geoms for mapping
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE)  %>%
select(GEOID, geometry)
# Join the survey and non-survey data with geoms from Census for mapping
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
# MAP DATA
#| output: true
tm_shape(map_df_sf) +
tm_polygons("status_num",
palette = "Reds",
legend.show = FALSE)
