inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "children_under_six"), sum)
View(crosswalk_join_2019)
View(crosswalk_join)
View(mo_crosswalk)
View(pop_zcta_5acs)
View(childcare_2019)
View(pop_zcta_5acs)
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
View(childcare_zips)
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "pop_5_and_under"), sum)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
View(mo_crosswalk)
View(mo_crosswalk)
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO") %>%
inner_join(pop_zcta_5acs, by = c("zip_code" = "GEOID"))
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
left_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO") %>%
inner_join(pop_zcta_5acs, by = c("zip_code" = "GEOID"))
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
zip_zcta_crosswalk_2019 <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2019UDS.xlsx"), sheet = 1) %>%
clean_names()
View(zip_zcta_crosswalk_2019)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_2019 %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_2019 %>%
anti_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
View(zip_zcta_crosswalk_2019)
View(pop_zcta_5acs)
View(crosswalk_join)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv"))
library(tidyverse)
library(janitor)
library(readxl)
library(here)
# Read in ChildCareAware data sent to us by Michael Austrin of ChildCareAware
df <- read_excel(here("data", "raw", "ChildCareAware_nov_2019_mar_2023.xlsx"), sheet = 2)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv"))
View(state_zips)
n_distinct(state_zips)
# Restructure each month-year to be a single dataframe and then bind them all together
tidy_df <- rbind(
nov_2019 <-  df[,1:5] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "November", year = "2019") ,
mar_2020 <- df[,6:10] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2020"),
sep_2020 <- df[,11:15] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2020"),
mar_2021 <- df[,16:20] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2021"),
sep_2021 <- df[,21:25] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2021"),
mar_2022 <- df[,26:30] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2022"),
sep_2022 <- df[,31:35] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2022"),
mar_2023 <- df[,36:40] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2023")
) %>%
mutate_at(c("childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six"), as.numeric) %>%
filter(!zip == "Grand Total")
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Restructure each month-year to be a single dataframe and then bind them all together
tidy_df <- rbind(
nov_2019 <-  df[,1:5] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "November", year = "2019") ,
mar_2020 <- df[,6:10] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2020"),
sep_2020 <- df[,11:15] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2020"),
mar_2021 <- df[,16:20] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2021"),
sep_2021 <- df[,21:25] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2021"),
mar_2022 <- df[,26:30] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2022"),
sep_2022 <- df[,31:35] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2022"),
mar_2023 <- df[,36:40] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2023")
) %>%
mutate_at(c("childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six"), as.numeric) %>%
filter(!zip == "Grand Total")
View(tidy_df)
View(state_zips)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names()
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c())
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c("zip" = "zip_code"))
str(tidy_df)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code))
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c("zip" = "zip_code"))
View(clean_and_tidy_df)
View(tidy_df)
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% state_zips$zip_code)
View(clean_and_tidy_df)
problem_zips <- tidy_df %>%
filter(!zip %in% state_zips$zip_code)
View(problem_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% state_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
View(state_zips)
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code))
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.csv")) %>%
clean_names() %>%
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.xlsx")) %>%
clean_names() %>%
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.xlsx")) %>%
clean_names()
View(updated_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% updated_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code)) %>%
select(zip_code, city, county)
all_zips <- rbind(updated_zips, state_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% all_zips$zip_code)
View(clean_and_tidy_df)
View(problem_zips)
View(clean_and_tidy_df)
# The problem zips cause us to lose data from 12 programs
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% all_zips$zip_code)
# The problem zips cause us to lose data from 12 programs
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
write.csv(tidy_df, "data/processed/ChildCareAware_cleaned.csv")
getwd()
library(tidyverse)
library(tidycensus)
library(here)
# The code below caches the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
# Get population estimates for 2017-2021 5-year ACS by 5 years old, 3 and 4 years old, and under 3 years then sum together
pop_zcta <- get_acs(geography = "zcta", variables = c("B09001_005", "B09001_004", "B09001_003")) %>%
group_by(GEOID) %>%
summarize(pop_5_and_under = sum(estimate))
View(pop_zcta)
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
library(janitor)
# Fact-check
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
library(readxl)
# Fact-check
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Every zip code in the data from ChildCareAware is matched to a ZCTA from UDS 2021 crosswalk
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(pop_zcta)
# Every zip code in the data from ChildCareAware is matched to a ZCTA from UDS 2021 crosswalk
crosswalk_join <- pop_zcta %>%
inner_join(mo_crosswalk, by = c("GEOID" = "zip_code"))
View(crosswalk_join)
under_five_pop <- get_acs(geography = "zcta", variables = c("B09001_004", "B09001_003")) %>%
group_by(GEOID) %>%
summarize(pop_5_and_under = sum(estimate))
five_pop <- get_acs(geography = "zcta", variables = c("B09001_005")) %>%
group_by(GEOID) %>%
summarize(pop_5_and_under = sum(estimate))
# Every zip code in the data from ChildCareAware is matched to a ZCTA from UDS 2021 crosswalk
five_pop_crosswalk_join <- five_pop %>%
inner_join(mo_crosswalk, by = c("GEOID" = "zip_code"))
under_five_pop_crosswalk_join <- under_five_pop %>%
inner_join(mo_crosswalk, by = c("GEOID" = "zip_code"))
View(under_five_pop_crosswalk_join)
under_five_pop <- get_acs(geography = "zcta", variables = c("B09001_004", "B09001_003")) %>%
group_by(GEOID) %>%
summarize(pop = sum(estimate))
five_pop <- get_acs(geography = "zcta", variables = c("B09001_005")) %>%
group_by(GEOID) %>%
summarize(pop = sum(estimate))
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Every zip code in the data from ChildCareAware is matched to a ZCTA from UDS 2021 crosswalk
five_pop_crosswalk_join <- five_pop %>%
inner_join(mo_crosswalk, by = c("GEOID" = "zip_code"))
under_five_pop_crosswalk_join <- under_five_pop %>%
inner_join(mo_crosswalk, by = c("GEOID" = "zip_code"))
sum(five_pop_crosswalk_join$pop)
sum(under_five_pop_crosswalk_join$pop)
75271 + 358321
load_variables()
load_variables(acs5)
load_variables(2021, "acs5", cache = TRUE)
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE)
View(variables)
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE) %>%
filter(name == c("B09001_005", "B09001_004", "B09001_003"))
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE) %>%
filter(name = c("B09001_005", "B09001_004", "B09001_003"))
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE) %>%
filter(name == c("B09001_005", "B09001_004", "B09001_003"))
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE) %>%
filter(name == "B09001_005")
# Check out variables for 2017-2021 5-year ACS
variables <- load_variables(2021, "acs5", cache = TRUE) %>%
filter(name %in% c("B09001_005","B09001_004", "B09001_003"))
# Check out variables for 2017-2021 5-year ACS and find the ones we want
variables <- load_variables(2021, "acs5", cache = TRUE)
distinct(variables$concept)
unique(variables$concept)
367103 + 75271
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(lubridate)
# Load in data
# 426 observations total
# No status so all must be paid
arpa_training <- read_excel(here("data", "raw","ARPA Annual Training Costs with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
# There are variances in how the full addresses is recorded and a few edge cases the code below accounts for
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# One mailing address and zip got swapped, so I'm hard coding it
# Hard coding will be marked with the unique ID for future fact-checking and reference
request_number == "E189-834" ~ "63031",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_training") %>%
rename(amount = paid_amount) %>%
mutate(year = year(signature_date)) %>%
rename(id = request_number) %>%
select(id, zip, amount, type, year)
# 551 observations
# No status so all must be paid
arpa_paycheck_3 <- read_excel(here("data", "raw", "ARPA Paycheck Protection Round 3 with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Another hardcoded data entry to recover error
request_number == "E973-956" ~ "63031",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_paycheck_3") %>%
rename(amount = paid_amount) %>%
mutate(year = year(signature_date)) %>%
rename(id = request_number) %>%
select(id, zip, amount, type, year)
# 582 observations
# No status so all must be paid
arpa_retention <- read_excel(here("data", "raw", "ARPA Retention of Child Care Staff with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Hardcoded
request_number == "P241-504" ~ "63031",
# Harcoded
request_number == "E582-132" ~ "65625",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_retention") %>%
rename(amount = paid_amount) %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
select(id, zip, amount, type, year)
# 832 observations and all are Paid
# Signature date is very messy, but all apps and signatures are in 2021, so we can just clear it that way
crrsa_paycheck_1 <-  read_excel(here("data", "raw", "CRRSA Paycheck Protection Round 1 with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
# Three zips were written incorrectly. Harcoded like above
mutate(facility_zip = case_when(facility_provider_dvn == "001833609" ~ "65536",
facility_provider_dvn == "001667665" ~ "64082",
facility_provider_dvn == "002415103" ~ "63115",
facility_provider_dvn == "001495029" ~ "63034",
facility_provider_dvn == "002933295" ~ "63111",
# One zip code was incorrect
facility_provider_dvn == "000434757" ~ "63857",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_paycheck_1") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn) %>%
# All apps and signatures in 2021
mutate(year = 2021) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
# 1231 observations
# No status so all must be paid
crrsa_paycheck_2 <-  read_excel(here("data", "raw", "CRRSA Paycheck Protection Round 2 with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Four zip codes are missing and I hardcoded by request number
request_number == "E817-412" ~ "63760",
request_number == "E564-851" ~ "65625",
request_number == "E245-402" ~ "65051",
request_number == "E573-202" ~ "64465",
# Two zip codes were incorrect
request_number == "P304-368" ~ "63857",
request_number == "E789-621" ~ "63021",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "crrsa_paycheck_2") %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
rename(amount = paid_amount) %>%
select(id, zip, amount, type, year)
# 613 observations, but only 264 are paid already
# Signature data is messed up
crrsa_startup_expansion <-  read_excel(here("data", "raw", "CRRSA Startup and Expansion with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(physical_address_zip = str_sub(physical_address_zip, 1, 5)) %>%
# Another city written for a zip, hardcoded in
mutate(physical_address_zip = case_when(dvn == "2915537" ~ "63141", TRUE ~ physical_address_zip)) %>%
mutate(type = "crrsa_startup_expansion") %>%
rename(amount = paid_amount) %>%
mutate(id = dvn) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
select(id, physical_address_zip, amount, type, year) %>%
mutate(year = case_when(id == "2944425" ~ as.integer(2022),
id == "2921977" ~ as.integer(2021),
id == "2909428" ~ as.integer(2021),
TRUE ~ year)) %>%
rename(zip = physical_address_zip)
# 920 observations, 813 are paid
# Signature dates are also broken
crrsa_tech_asistance <-  read_excel(here("data", "raw", "CRRSA Technical Business Assistance with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
mutate(facility_zip = case_when(facility_provider_dvn_1 == "002590736" ~ "64152",
facility_provider_dvn_1 == "002746443" ~ "63138",
facility_provider_dvn_1 == "000180969" ~ "63136",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_tech_asistance") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn_1) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
# Manually fixing years by checking against application date
mutate(year = case_when(id == "000181879" ~ as.integer(2022),
id == "002176318" ~ as.integer(2022),
id == "002444331" ~ as.integer(2022),
id == "002490442" ~ as.integer(2021),
id == "001994552" ~ as.integer(2021),
id == "002637294" ~ as.integer(2021),
id == "002244324" ~ as.integer(2021),
id == "002875465" ~ as.integer(2021),
id == "002810659" ~ as.integer(2021),
id == "002416246" ~ as.integer(2022),
id == "002921977" ~ as.integer(2022), TRUE ~ year)) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
all_relief <- rbind(arpa_paycheck_3, arpa_training, arpa_retention, crrsa_paycheck_1, crrsa_paycheck_2, crrsa_startup_expansion,
crrsa_tech_asistance)
View(all_relief)
sum(all_relief$amount)
