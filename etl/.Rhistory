request_number == "E564-851" ~ "65625",
request_number == "E245-402" ~ "65051",
request_number == "E573-202" ~ "64465",
# Two zip codes were incorrect
request_number == "P304-368" ~ "63857",
request_number == "E789-621" ~ "63021",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "crrsa_paycheck_2") %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
rename(amount = paid_amount) %>%
select(id, zip, amount, type, year)
# 613 observations, but only 264 are paid already
# Signature data is messed up
crrsa_startup_expansion <-  read_excel(here("data", "raw", "CRRSA Startup and Expansion with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(physical_address_zip = str_sub(physical_address_zip, 1, 5)) %>%
# Another city written for a zip, hardcoded in
mutate(physical_address_zip = case_when(dvn == "2915537" ~ "63141", TRUE ~ physical_address_zip)) %>%
mutate(type = "crrsa_startup_expansion") %>%
rename(amount = paid_amount) %>%
mutate(id = dvn) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
select(id, physical_address_zip, amount, type, year) %>%
mutate(year = case_when(id == "2944425" ~ as.integer(2022),
id == "2921977" ~ as.integer(2021),
id == "2909428" ~ as.integer(2021),
TRUE ~ year)) %>%
rename(zip = physical_address_zip)
# 920 observations, 813 are paid
# Signature dates are also broken
crrsa_tech_asistance <-  read_excel(here("data", "raw", "CRRSA Technical Business Assistance with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
mutate(facility_zip = case_when(facility_provider_dvn_1 == "002590736" ~ "64152",
facility_provider_dvn_1 == "002746443" ~ "63138",
facility_provider_dvn_1 == "000180969" ~ "63136",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_tech_asistance") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn_1) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
# Manually fixing years by checking against application date
mutate(year = case_when(id == "000181879" ~ as.integer(2022),
id == "002176318" ~ as.integer(2022),
id == "002444331" ~ as.integer(2022),
id == "002490442" ~ as.integer(2021),
id == "001994552" ~ as.integer(2021),
id == "002637294" ~ as.integer(2021),
id == "002244324" ~ as.integer(2021),
id == "002875465" ~ as.integer(2021),
id == "002810659" ~ as.integer(2021),
id == "002416246" ~ as.integer(2022),
id == "002921977" ~ as.integer(2022), TRUE ~ year)) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
all_relief <- rbind(arpa_paycheck_3, arpa_training, arpa_retention, crrsa_paycheck_1, crrsa_paycheck_2, crrsa_startup_expansion,
crrsa_tech_asistance)
View(all_relief)
sum(all_relief$amount)
library(tidyverse)
library(janitor)
library(readxl)
library(here)
library(lubridate)
# Load in data
# 426 observations total
# No status so all must be paid
arpa_training <- read_excel(here("data", "raw","ARPA Annual Training Costs with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
# There are variances in how the full addresses is recorded and a few edge cases the code below accounts for
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# One mailing address and zip got swapped, so I'm hard coding it
# Hard coding will be marked with the unique ID for future fact-checking and reference
request_number == "E189-834" ~ "63031",
request_number == "E140-509" ~ "64804",
request_number == "E406-695" ~ "64138",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_training") %>%
rename(amount = paid_amount) %>%
# First tried mutate(year = year(signature_date)), but had one NA and rest 2022
# All data is from 2022 so we can set this manually
mutate(year = "2022") %>%
rename(id = request_number) %>%
select(id, zip, amount, type, year)
# 551 observations
# No status so all must be paid
arpa_paycheck_3 <- read_excel(here("data", "raw", "ARPA Paycheck Protection Round 3 with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Another hardcoded data entry to recover error
request_number == "E973-956" ~ "63031",
request_number == "P663-688" ~ "64804",
request_number == "E731-462" ~ "64138",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_paycheck_3") %>%
rename(amount = paid_amount) %>%
mutate(year = year(signature_date)) %>%
rename(id = request_number) %>%
select(id, zip, amount, type, year)
# 582 observations
# No status so all must be paid
arpa_retention <- read_excel(here("data", "raw", "ARPA Retention of Child Care Staff with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Hardcoded
request_number == "P241-504" ~ "63031",
request_number == "E582-132" ~ "65625",
request_number == "E476-936" ~ "64804",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "arpa_retention") %>%
rename(amount = paid_amount) %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
select(id, zip, amount, type, year)
# 832 observations and all are Paid
# Signature date is very messy, but all apps and signatures are in 2021, so we can just clear it that way
crrsa_paycheck_1 <-  read_excel(here("data", "raw", "CRRSA Paycheck Protection Round 1 with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
# Three zips were written incorrectly. Harcoded like above
mutate(facility_zip = case_when(facility_provider_dvn == "001833609" ~ "65536",
facility_provider_dvn == "001667665" ~ "64082",
facility_provider_dvn == "002415103" ~ "63115",
facility_provider_dvn == "001495029" ~ "63034",
facility_provider_dvn == "002933295" ~ "63111",
facility_provider_dvn == "000434757" ~ "63857",
facility_provider_dvn == "002648826" ~ "64804",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_paycheck_1") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn) %>%
# All apps and signatures in 2021
mutate(year = 2021) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
# 1231 observations
# No status so all must be paid
crrsa_paycheck_2 <-  read_excel(here("data", "raw", "CRRSA Paycheck Protection Round 2 with Paid.xlsx")) %>%
clean_names() %>%
select(request_number, facility_address_street_city_state_zip_code, paid_amount, signature_date) %>%
mutate(facility_address_street_city_state_zip_code = trimws(facility_address_street_city_state_zip_code)) %>%
mutate(zip = trimws(word(facility_address_street_city_state_zip_code, 5, sep = ","))) %>%
mutate(zip = case_when(zip == "MO" |zip == "ST. JOSEPH" ~ str_sub(facility_address_street_city_state_zip_code, -5),
# Four zip codes are missing and I hardcoded by request number
request_number == "E817-412" ~ "63760",
request_number == "E564-851" ~ "65625",
request_number == "E245-402" ~ "65051",
request_number == "E573-202" ~ "64465",
# Two zip codes were incorrect
request_number == "P304-368" ~ "63857",
request_number == "E789-621" ~ "63021",
request_number == "E756-132" ~ "64804",
request_number == "E286-580" ~ "64150",
request_number == "E494-743" ~ "64081",
TRUE ~ zip)) %>%
mutate(zip = str_sub(zip, 1, 5)) %>%
mutate(type = "crrsa_paycheck_2") %>%
rename(id = request_number) %>%
mutate(year = year(signature_date)) %>%
rename(amount = paid_amount) %>%
select(id, zip, amount, type, year)
# 613 observations, but only 264 are paid already
# Signature data is messed up
crrsa_startup_expansion <-  read_excel(here("data", "raw", "CRRSA Startup and Expansion with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(physical_address_zip = str_sub(physical_address_zip, 1, 5)) %>%
# Another city written for a zip, hardcoded in
mutate(physical_address_zip = case_when(dvn == "2915537" ~ "63141", TRUE ~ physical_address_zip)) %>%
mutate(type = "crrsa_startup_expansion") %>%
rename(amount = paid_amount) %>%
mutate(id = dvn) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
mutate(year = case_when(id == "2944425" ~ as.integer(2022),
id == "2921977" ~ as.integer(2021),
id == "2909428" ~ as.integer(2021),
id == "2708501" ~ as.integer(2021),
id == "2874046" ~ as.integer(2021),
id == "2338027" ~ as.integer(2021),
id == "2910489" ~ as.integer(2021),
id == "756641" ~ as.integer(2022),
id == "2717215" ~ as.integer(2022),
TRUE ~ year)) %>%
select(id, physical_address_zip, amount, type, year) %>%
rename(zip = physical_address_zip)
# 920 observations, 813 are paid
# Signature dates are also broken
crrsa_tech_asistance <-  read_excel(here("data", "raw", "CRRSA Technical Business Assistance with Paid.xlsx")) %>%
clean_names() %>%
filter(status == "Paid") %>%
mutate(facility_zip = str_sub(facility_zip, 1, 5)) %>%
mutate(facility_zip = case_when(facility_provider_dvn_1 == "002590736" ~ "64152",
facility_provider_dvn_1 == "002746443" ~ "63138",
facility_provider_dvn_1 == "000180969" ~ "63136",
facility_provider_dvn_1 == "002648826" ~ "64804",
TRUE ~ facility_zip)) %>%
mutate(type = "crrsa_tech_asistance") %>%
rename(amount = amount_paid) %>%
rename(id = facility_provider_dvn_1) %>%
extract(signature_date, "year", "(\\d{4})", remove = FALSE, convert = TRUE) %>%
# Manually fixing years by checking against application date and date created
mutate(year = case_when(id == "000181879" ~ as.integer(2022),
id == "002176318" ~ as.integer(2022),
id == "002444331" ~ as.integer(2022),
id == "002490442" ~ as.integer(2021),
id == "001994552" ~ as.integer(2021),
id == "002637294" ~ as.integer(2021),
id == "002244324" ~ as.integer(2021),
id == "002875465" ~ as.integer(2021),
id == "002810659" ~ as.integer(2021),
id == "002416246" ~ as.integer(2022),
id == "002921977" ~ as.integer(2022),
id == "000180969" ~ as.integer(2021),
id == "001617558" ~ as.integer(2022),
id == "002050346" ~ as.integer(2022),
id == "002164474" ~ as.integer(2022),
id == "002726616" ~ as.integer(2022),
id == "002909946" ~ as.integer(2022),
TRUE ~ year)) %>%
select(id, facility_zip, amount, type, year) %>%
rename(zip = facility_zip)
all_relief <- rbind(arpa_paycheck_3, arpa_training, arpa_retention, crrsa_paycheck_1, crrsa_paycheck_2, crrsa_startup_expansion,
crrsa_tech_asistance)
total_money <- sum(all_relief$amount)
total_money <- sum(all_relief$amount)*2
library(tidyverse)
library(janitor)
library(readxl)
library(tidycensus)
library(here)
library(sf)
library(lubridate)
library(tmap)
library(DT)
# Cache the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
# Sets tmap to interactive mode
tmap_mode("view")
# LOAD DATA
# Load clean and crosswalked data for all zctas from ChildCareAware survey
childcare_aware <- read_csv(here("data", "processed", "ChildCareAware_cleaned_and_crosswalked.csv")) %>%
mutate(zcta = as.character(zcta))
# Load clean and crosswalked data for all zctas from ChildCareAware survey, with all other zctas and populations baked in
childcare_supply_and_demand_2019_2023 <-  read_csv(here("data", "processed", "childcare_supply_and_demand_2019_2023.csv")) %>%
mutate(zcta = as.character(zcta))
# Load all zctas not included in ChildCareAware survey
# There are 1023 unique zctas in MO according to these crosswalk
mo_zctas <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names() %>%
filter(state == "MO")
# 5 year ACS estimates pf population five and under for all zctas in the country
acs <- read_csv(here("data", "processed", "pop_zcta_5acs.csv"))
crrsa_startup_expansion <-  read_excel(here("data","raw", "CRRSA Startup and Expansion with Paid.xlsx")) %>%
clean_names()
# Load all relief data with cleaned zips and years for when and where money was dispersed to
relief_funding <- read_csv(here("data", "processed", "all_relief_cleaned.csv")) %>%
mutate(zip = as.character(zip))
# Join crosswalk with relief funding zips to that each zip matches a zcta to correspond to desert data
relief_zcta <- relief_funding %>%
inner_join(mo_zctas, by = c("zip" = "zip_code"))
supply_and_demand_2023 <- childcare_supply_and_demand_2019_2023 %>%
filter(year == "2023") %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(ratio < 3 ~ "non-desert",
ratio >= 3 & ratio < 10 ~ "desert",
ratio >= 10 ~ "extreme",
is.na(ratio) & pop_5_and_under >= 50 ~ "desert",
is.na(ratio) & pop_5_and_under < 50 ~ "non-desert",
TRUE ~ "non-desert"))
map_df <- supply_and_demand_2023 %>%
mutate(status_num = case_when(status == "non-desert" ~ 0,
status == "desert" ~ 1,
status == "extreme" ~ 3)) %>%
select(zcta, status, status_num, ratio)
#write.csv(map_df, "datawrapper_map.csv")
# JOIN CROSSWAKLED DATA WITH GEOM FOR MAPPING
# Now we can use zctas to get geoms for mapping
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes and get geoms for mapping
# B09001_005 is a dummy variable, we just need the geoms from the call
zcta_geoms <- get_acs(geography = "zip code tabulation area", variables = "B09001_005", geometry = TRUE)  %>%
select(GEOID, geometry)
# Join the survey and non-survey data with geoms from Census for mapping
# This join to zcta geoms from ACS data drops 5 values, but anti join shows they are all non-deserts and "point" zctas for PO boxes
map_df_sf <- map_df %>%
inner_join(zcta_geoms, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
#| output: true
# MAP DATA
tm_shape(map_df_sf) +
tm_polygons("status_num",
palette = "Reds",
legend.show = FALSE)
deserts_2023 <- supply_and_demand_2023 %>%
filter(status %in% c("desert", "extreme"))
# 202,318 in 227 zctas that are childcare deserts
sum(deserts_2023$pop_5_and_under, na.rm = TRUE)
# Same five ZCTAs didn't join, but again, these are non-deserts PO boxes anyway
mo_zctas_with_pop <- mo_zctas %>%
left_join(acs, by = c("zcta" = "GEOID")) %>%
select(zcta, pop_5_and_under)
#  442,254 children under 5 or under across the state
sum(mo_zctas_with_pop$pop_5_and_under, na.rm=TRUE)
percent_in_deserts <- 202318/442254
#| output: true
#| column: page
datatable(deserts_2023, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
#| output: true
#| column: page
datatable(mo_zctas_with_pop, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
yearly_deserts <- childcare_supply_and_demand_2019_2023 %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(ratio < 3 ~ "non-desert",
ratio >= 3 ~ "desert",
is.na(ratio) & pop_5_and_under >= 50 ~ "desert",
is.na(ratio) & pop_5_and_under < 50 ~ "non-desert",
TRUE ~ "non-desert")) %>%
filter(status == "desert") %>%
group_by(year, month) %>%
summarize(children_in_deserts = sum(pop_5_and_under))
num_programs_yearly <- childcare_aware %>%
group_by(year, month) %>%
summarize(num_program = sum(childcare_programs))
#| output: true
#| column: page
datatable(yearly_deserts, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
#| output: true
#| column: page
datatable(num_programs_yearly, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
age_breakouts <- crrsa_startup_expansion %>%
select(number_of_infant_toddler_slots_adding, number_of_preschool_slots_adding, number_of_school_age_slots_adding) %>%
mutate_all(~replace(., is.na(.), 0)) %>%
pivot_longer(number_of_infant_toddler_slots_adding:number_of_school_age_slots_adding, names_to = "age_group", values_to = "number")%>%
group_by(age_group) %>%
summarize(number = sum(number))
#| output: true
#| column: page
datatable(age_breakouts, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
real_capacity <- crrsa_startup_expansion %>%
select(dvn, at_startup, number_of_infant_toddler_slots_adding, number_of_preschool_slots_adding, number_of_school_age_slots_adding, total_anticipated_capacity) %>%
mutate(slots = number_of_infant_toddler_slots_adding + number_of_preschool_slots_adding + number_of_school_age_slots_adding) %>%
filter(slots > total_anticipated_capacity)
#| output: true
#| column: page
datatable(real_capacity, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
# Filter the capacity deserts to data from 2021 and 2022 and remove non-desert zctas
supply_and_demand_2021_2022 <- childcare_supply_and_demand_2019_2023 %>%
filter(year %in% c("2021", "2022")) %>%
mutate(ratio = pop_5_and_under / licensed_capacity) %>%
mutate(status = case_when(ratio < 3 ~ "non-desert",
ratio >= 3 ~ "desert",
is.na(ratio) & pop_5_and_under >= 50 ~ "desert",
is.na(ratio) & pop_5_and_under < 50 ~ "non-desert",
TRUE ~ "non-desert"))
# This join is for all funding together
relief_to_desert_join <- relief_zcta %>%
group_by(zcta, year) %>%
summarize(total = sum(amount)) %>%
left_join(supply_and_demand_2021_2022, by = c("zcta", "year"))
# The big reveal
total_desert_relief <-  relief_to_desert_join %>%
group_by(status) %>%
summarize(total = sum(total))
portion_to_deserts <- 55014524/229363334
#| output: true
#| column: page
datatable(total_desert_relief, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
# This join is for funding my source
relief_to_desert_type_join <- relief_zcta %>%
group_by(zcta, year, type) %>%
summarize(total = sum(amount)) %>%
left_join(supply_and_demand_2021_2022, by = c("zcta", "year")) %>%
mutate(status = case_when(is.na(ratio) ~ "non-desert", TRUE ~ "desert")) %>%
group_by(type, status) %>%
summarize(total = sum(total, na.rm = TRUE)) %>%
pivot_wider(names_from = status, values_from = total)
#write.csv(relief_to_desert_type_join, "datwrapper_stacked_bars.csv")
#| output: true
#| column: page
datatable(relief_to_desert_type_join, filter = 'top', class = 'cell-border stripe order-column', extensions = 'Buttons',
options = list(
paging = TRUE,
searching = TRUE,
fixedColumns = TRUE,
autoWidth = TRUE,
ordering = TRUE,
dom = 'tB',
buttons = c('copy', 'csv', 'excel')
))
View(relief_to_desert_join)
View(supply_and_demand_2021_2022)
# Filter the capacity deserts to data from 2021 and 2022 and remove non-desert zctas, and aggregate to yearly
supply_and_demand_2021_2022 <- childcare_supply_and_demand_2019_2023 %>%
filter(year %in% c("2021", "2022")) %>%
group_by(zcta, year) %>%
summarize(pop_5_and_under = sum(pop_5_and_under), licensed_capacity = sum(licensed_capacity)) %>%
mutate(ratio = pop_5_and_under/licensed_capacity) %>%
mutate(status = case_when(ratio < 3 ~ "non-desert",
ratio >= 3 ~ "desert",
is.na(ratio) & pop_5_and_under >= 50 ~ "desert",
is.na(ratio) & pop_5_and_under < 50 ~ "non-desert",
TRUE ~ "non-desert"))
# This join is for all funding together
relief_to_desert_join <- relief_zcta %>%
group_by(zcta, year) %>%
summarize(total = sum(amount)) %>%
left_join(supply_and_demand_2021_2022, by = c("zcta", "year"))
# The big reveal
total_desert_relief <-  relief_to_desert_join %>%
group_by(status) %>%
summarize(total = sum(total))
portion_to_deserts <- 55014524/229363334
View(total_desert_relief)
portion_to_deserts <- 25757599/88924069
check_total <- 25757599 + 88924069
total_money <- sum(all_relief$amount)
sum(all_relief$amount)
library(tidyverse)
library(janitor)
library(readxl)
library(here)
dese_funds <- read_excel(here("data", "processed", "dese_funds_update.xlsx")) %>%
clean_names() %>%
mutate(awarded_approved_amount = as.numeric(if_else(awarded_approved_amount == "Pending", "0", awarded_approved_amount))) %>%
mutate(paid_amount_as_of_4_14_23 = as.numeric(paid_amount_as_of_4_14_23))
our_foia_data <- dese_funds %>%
filter(application_name %in% c("Enhancement", "Paycheck Protection", "Technical Business Assistance",
"Expansion", "Startup", "Retention of Staff", "Annual Training Costs"))
foia_awarded <- sum(our_foia_data$awarded_approved_amount)
foia_paid <- sum(our_foia_data$paid_amount_as_of_4_14_23)
total_awarded <- sum(dese_funds$awarded_approved_amount)
total_paid <- sum(dese_funds$paid_amount_as_of_4_14_23)
View(dese_funds)
