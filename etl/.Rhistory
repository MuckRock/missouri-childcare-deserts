library(tidyverse)
library(janitor)
library(readxl)
library(tidycensus)
library(sf)
library(tmap)
# The code below caches the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv"))
library(here)
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv"))
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Filter UDS crosswalk data to just the state of Missouri
#There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
View(childcare_zips)
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip)) %>%
filter(year == c("2023"))
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip)) %>%
filter(year == c("2023", "2022"))
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip)) %>%
filter(year == "2023")
### LOAD IN DATA ###
# Clean ChildCareAware data
# I'm sticking with just 2023 here, because crosswalking years with zip codes changing may end making too much of a mess
# About 100 zips from years previous to 2023 don't match, but all of 2023 does
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
### LOAD IN DATA ###
# Clean ChildCareAware data
# I'm sticking with just 2023 here, because crosswalking years with zip codes changing may end making too much of a mess
# About 12 zips from years previous to 2023 don't match, but all of 2023 does
childcare_zips <- read_csv(here("data","ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip)) %>%
filter(year == "2023")
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
# Get the 2017-2021 5-year ACS ZTCAs for the whole US so that we can join these with zip codes
zcta <- get_acs(geography = "zip code tabulation area", variables = "B19013_001",
summary_var = "B01001_001", geometry = TRUE)
# Join crosswalked data with geoms
crosswalk_geom_join <- crosswalk_join %>%
inner_join(zcta, by = c("zcta" = "GEOID")) %>%
st_as_sf(sf_column_name = "geometry")
View(crosswalk_geom_join)
### EXPORT DATA FOR MAPPING AND ANALYSIS ###
export(crosswalk_geom_join, "data/ChildCareAware_cleaned_and_crosswalked.csv")
### EXPORT DATA FOR MAPPING AND ANALYSIS ###
write.csv(crosswalk_geom_join, "data/ChildCareAware_cleaned_and_crosswalked.csv")
### EXPORT DATA FOR MAPPING AND ANALYSIS ###
write.csv(crosswalk_geom_join, "ChildCareAware_cleaned_and_crosswalked.csv")
### EXPORT DATA FOR MAPPING AND ANALYSIS ###
write.csv(crosswalk_geom_join, "data/ChildCareAware_cleaned_and_crosswalked.csv")
library(tidyverse)
library(janitor)
library(readxl)
library(tidycensus)
library(here)
library(sf)
library(tmap)
# The code below caches the zip code tabulation data we want from the Census
options(tigris_use_cache = TRUE)
### LOAD IN DATA ###
# Clean ChildCareAware data
# I'm sticking with just 2023 here, because crosswalking years with zip codes changing may end making too much of a mess
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip)) %>%
filter(year == "2023")
View(childcare_zips)
# Load cleaned data from ChildCareAware survey dated March, 2023
survey_data <- read_csv(here("data", "processed", "ChildCareAware_cleaned.csv"))
View(survey_data)
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# ACS data for each zcta from 2017-2021 five year ACS
pop_zcta_5acs <- read_csv(here("data", "processed", "pop_zcta_5acs.csv"))
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "children_under_six"), sum)
View(crosswalk_join)
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
View(childcare_zips)
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# ACS data for each zcta from 2017-2021 five year ACS
pop_zcta_5acs <- read_csv(here("data", "processed", "pop_zcta_5acs.csv"))
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "children_under_six"), sum)
View(crosswalk_join)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "children_under_six"), sum)
View(crosswalk_join)
View(childcare_zips)
# Seperate years so that we can join each year seperatly with its crosswalk
childcare_2019 <- childcare_zips %>%
filter(year == "2019")
View(childcare_2019)
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk_2019 <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2019UDS.xlsx"), sheet = 1) %>%
clean_names()
# ACS data for each zcta from 2017-2021 five year ACS
pop_zcta_5acs <- read_csv(here("data", "processed", "pop_zcta_5acs.csv"))
# Condenses 480 zipcodes to 475 zctas
crosswalk_join_2019 <- childcare_2019 %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "children_under_six"), sum)
View(crosswalk_join_2019)
View(crosswalk_join)
View(mo_crosswalk)
View(pop_zcta_5acs)
View(childcare_2019)
View(pop_zcta_5acs)
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
### LOAD IN DATA ###
# Clean ChildCareAware data
childcare_zips <- read_csv(here("data","processed", "ChildCareAware_cleaned.csv")) %>%
mutate(zip = as.character(zip))
View(childcare_zips)
# Zip code to zcta crosswalk file from UDS Mapper
zip_zcta_crosswalk <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2021UDS.xlsx"), sheet = 1) %>%
clean_names()
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity", "pop_5_and_under"), sum)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
View(mo_crosswalk)
View(mo_crosswalk)
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO") %>%
inner_join(pop_zcta_5acs, by = c("zip_code" = "GEOID"))
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
left_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO") %>%
inner_join(pop_zcta_5acs, by = c("zip_code" = "GEOID"))
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Filter UDS crosswalk data to just the state of Missouri
# There are unique 1023 zctas and 1154 unique zip codes in MO. These also include PO boxes
mo_crosswalk <- zip_zcta_crosswalk %>%
filter(state == "MO")
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Condenses 480 zipcodes to 475 zctas
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code")) %>%
group_by(zcta, year, month) %>%
summarize_at(c("childcare_programs", "programs_accepting_subsidies", "licensed_capacity"), sum)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_zips %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
zip_zcta_crosswalk_2019 <- read_excel(here("data", "raw", "ZIPCodetoZCTACrosswalk2019UDS.xlsx"), sheet = 1) %>%
clean_names()
View(zip_zcta_crosswalk_2019)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_2019 %>%
inner_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
# Condenses 3885 observations to 3849
crosswalk_join <- childcare_2019 %>%
anti_join(mo_crosswalk, by = c("zip" = "zip_code"))
View(crosswalk_join)
View(zip_zcta_crosswalk_2019)
View(pop_zcta_5acs)
View(crosswalk_join)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv"))
library(tidyverse)
library(janitor)
library(readxl)
library(here)
# Read in ChildCareAware data sent to us by Michael Austrin of ChildCareAware
df <- read_excel(here("data", "raw", "ChildCareAware_nov_2019_mar_2023.xlsx"), sheet = 2)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv"))
View(state_zips)
n_distinct(state_zips)
# Restructure each month-year to be a single dataframe and then bind them all together
tidy_df <- rbind(
nov_2019 <-  df[,1:5] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "November", year = "2019") ,
mar_2020 <- df[,6:10] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2020"),
sep_2020 <- df[,11:15] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2020"),
mar_2021 <- df[,16:20] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2021"),
sep_2021 <- df[,21:25] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2021"),
mar_2022 <- df[,26:30] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2022"),
sep_2022 <- df[,31:35] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2022"),
mar_2023 <- df[,36:40] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2023")
) %>%
mutate_at(c("childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six"), as.numeric) %>%
filter(!zip == "Grand Total")
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Restructure each month-year to be a single dataframe and then bind them all together
tidy_df <- rbind(
nov_2019 <-  df[,1:5] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "November", year = "2019") ,
mar_2020 <- df[,6:10] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2020"),
sep_2020 <- df[,11:15] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2020"),
mar_2021 <- df[,16:20] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2021"),
sep_2021 <- df[,21:25] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2021"),
mar_2022 <- df[,26:30] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2022"),
sep_2022 <- df[,31:35] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "September", year = "2022"),
mar_2023 <- df[,36:40] %>%
slice(-1) %>%
set_names(col_names) %>%
mutate(month = "March", year = "2023")
) %>%
mutate_at(c("childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six"), as.numeric) %>%
filter(!zip == "Grand Total")
View(tidy_df)
View(state_zips)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names()
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c())
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c("zip" = "zip_code"))
str(tidy_df)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code))
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
inner_join(state_zips, by = c("zip" = "zip_code"))
View(clean_and_tidy_df)
View(tidy_df)
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% state_zips$zip_code)
View(clean_and_tidy_df)
problem_zips <- tidy_df %>%
filter(!zip %in% state_zips$zip_code)
View(problem_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% state_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
View(state_zips)
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code))
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.csv")) %>%
clean_names() %>%
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.xlsx")) %>%
clean_names() %>%
# Set column names for tidy data frame
col_names <- c("zip", "childcare_programs", "licensed_capacity", "programs_accepting_subsidies", "children_under_six")
# Load data from MO [department of insurance](https://insurance.mo.gov/industry/zips.php) with some updated zips
updated_zips <- read_excel(here("data", "raw", "Missouri_Zip_Codes.xlsx")) %>%
clean_names()
View(updated_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% updated_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
# Load data [from MO open data portal](https://data.mo.gov/Geography/Missouri-Zip-Codes-by-County-City/im7g-fucq) with zip codes
state_zips <- read_csv(here("data", "raw", "Missouri_Zip_Codes_by_County_City.csv")) %>%
clean_names() %>%
mutate(zip_code = as.character(zip_code)) %>%
select(zip_code, city, county)
all_zips <- rbind(updated_zips, state_zips)
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
View(problem_zips)
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% all_zips$zip_code)
View(clean_and_tidy_df)
View(problem_zips)
View(clean_and_tidy_df)
# The problem zips cause us to lose data from 12 programs
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
# Get rid of any zips that don't match the states list of valid zip codes, because these may data entry errors
clean_and_tidy_df <- tidy_df %>%
filter(zip %in% all_zips$zip_code)
# The problem zips cause us to lose data from 12 programs
problem_zips <- tidy_df %>%
filter(!zip %in% all_zips$zip_code) %>%
group_by(zip) %>%
summarize(programs = sum(childcare_programs))
write.csv(tidy_df, "data/processed/ChildCareAware_cleaned.csv")
getwd()
